package com.trb.allocationservice.dao;

import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.trb.allocationservice.dto.GetAllocationDetailsDTO;
import com.trb.allocationservice.entity.ObjectedQuestionsAllocationModel;

@Repository
public interface objectionAllocationRepo extends JpaRepository<ObjectedQuestionsAllocationModel, Long> {

//	ObjectedQuestionsAllocationModel findByuserPkAndStatusIdAndObjectedQuestionsPk(Long userpk,Long statusId,Long questionsPk);
//
//	Optional<ObjectedQuestionsAllocationModel> findByuserPkAndObjectionAllocationPk(Long userpk, Long objectedPK);
	
	Optional<ObjectedQuestionsAllocationModel> findByObjectionAllocationPk(Long allocPK);
	
	//ObjectedQuestionsAllocationModel findByObjectionAllocationPk(Long objectedPK);
	
	List<ObjectedQuestionsAllocationModel> findAllByuserPk(Long userpk);
	
	List<ObjectedQuestionsAllocationModel> findAllBystatusId(Long statuspk);
	
//	List<ObjectedQuestionsAllocationModel> findByObjectedQuestionsPk(Long objectedPK);
	
	//List<ObjectedQuestionsAllocationModel> findAllBySubject(String subject);
	//@Query(value = "select main_table.objquesId,main_table.questionsId,main_table.qbId,main_table.clientId,main_table.examName, main_table.examDate,main_table.examBatch, main_table.questionsDescription, main_table.qstImage, main_table.status,main_table.objectionAllocationPk,main_table.subjectId, main_table.levelId,main_table.smeId,main_table.userId, main_table.name, main_table.statusId, main_table.statusCode,main_table.subject,main_table.level,main_table.summaryId  from  (SELECT CAST(o.objques_pk AS TEXT) as objquesId, o.qst_pk as questionsId, o.qst_qb_id as qbId, o.qtp_clnt_id as clientId,  o.qst_mdm_name as examName,  to_char(o.qbm_date, 'DD-MM-YYYY') as examDate, o.qbm_batch as examBatch, convert_from(kbne.qst_body, 'UTF8') as questionsDescription, knms.qbi_image as qstImage,  oa.objalloc_pk as objectionAllocationPk, oas.subject_id as subjectId, oas.level_id as levelId, u.user_pk as smeId,u.user_id as userId, u.firstname||' '||u.lastname as name, oa.action,oa.status_id as statusId, sts.code as statusCode, rm.name as subject, l.lvl_code as level, case when s.code IS NOT NULL then s.code else 'YET_TO_ALLOCATE' end status,oas.id as summaryId FROM thrdexams.objques o  inner join thrdexams.kusxn_b6nk_ed kbne on kbne.qst_pk = o.qst_pk   left join thrdexams.kub6nk_1m693s knms on knms.qbi_qb_id = kbne.qst_qb_id and knms.qbi_filename = kbne.qst_img_path left join thrdexams.obj_alloc_summary oas on oas.objques_pk = o.objques_pk and oas.currrent = 'Y'  left join thrdexams.obj_alloc oa on oa.summary_id = oas.id  left join thrdexams.status sts on sts.status_id = oa.status_id left join thrdexams.ref_master rm on rm.id = oas.subject_id   left join thrdexams.levels l on l.lvl_id = oas.level_id  left join thrdexams.users u on u.user_pk = oa.user_pk left join thrdexams.status s on s.status_id = oas.status_id) as main_table where (?1 is null or main_table.status = ?1) and (?2 is null or main_table.subject = ?2) and (?3 is null or main_table.examName = ?3) and (?4 is null or main_table.examDate = ?4) and (?5 is null or main_table.examBatch = ?5) and (?6 is null or main_table.level = ?6) and (?7 is null or main_table.userId = ?7) and (?8 is null or main_table.objquesId = ?8) and (?9 is null or main_table.statusCode = ?9)" , nativeQuery = true)
//	@Query(value = "select main_table.objquesId,main_table.questionsId,main_table.qbId,main_table.clientId,main_table.examName, main_table.examDate,main_table.examBatch, main_table.questionsDescription, main_table.qstImage, main_table.status,main_table.objectionAllocationPk,main_table.subjectId, main_table.levelId,main_table.smeId, main_table.userId, main_table.name, main_table.statusId, main_table.statusCode,main_table.subject,main_table.level,main_table.summaryId FROM (SELECT CAST(o.objques_pk AS TEXT) as objquesId, o.qst_pk as questionsId, o.qst_qb_id as qbId, o.qtp_clnt_id as clientId,  o.qst_mdm_name as examName, to_char(o.qbm_date, 'DD-MM-YYYY') as examDate, o.qbm_batch as examBatch, convert_from(kbne.qst_body, 'UTF8') as questionsDescription, knms.qbi_image as qstImage, case when oa.objalloc_pk IS NOT NULL then oa.objalloc_pk else 0 end objectionAllocationPk, oas.subject_id as subjectId, oas.level_id as levelId, u.user_pk as smeId,u.user_id as userId, u.firstname||' '||u.lastname as name, oa.action,oa.status_id as statusId, sts.code as statusCode, rm.name as subject, l.lvl_code as level, case when s.code IS NOT NULL then s.code else 'YET_TO_ALLOCATE' end status,oas.id as summaryId FROM (SELECT objques_pk, qst_pk, qst_mdm_id as qstMdmId, qst_mdm_name, qst_qb_id, qbm_date, qbm_batch, qtp_clnt_id, par_mdm_id FROM thrdexams.objques) as o inner join thrdexams.tbl_module_lang_map tmlm2 on tmlm2.tmlm_module_id = o.par_mdm_id inner join thrdexams.tbl_lang_mstr tlm  on tlm.tlm_lang_id = tmlm2.tmlm_lang_id inner join thrdexams.kub6nk_b6xch_m6pp1n9 knbxmpn on knbxmpn.qbm_module_id = tmlm2.tmlm_module_lang_id and knbxmpn.qbm_date = o.qbm_date and knbxmpn.qbm_batch = o.qbm_batch inner join thrdexams.kusxn_b6nk_ed kbne on kbne.qst_qb_id = knbxmpn.qbm_qb_id and o.qtp_clnt_id = kbne.qst_clnt_id left join thrdexams.kub6nk_1m693s knms on knms.qbi_qb_id = kbne.qst_qb_id and knms.qbi_filename = kbne.qst_img_path left join thrdexams.obj_alloc_summary oas on oas.objques_pk = o.objques_pk and oas.currrent = 'Y' left join thrdexams.obj_alloc oa on oa.summary_id = oas.id left join thrdexams.status sts on sts.status_id = oa.status_id left join thrdexams.ref_master rm on rm.id = oas.subject_id left join thrdexams.levels l on l.lvl_id = oas.level_id left join thrdexams.users u on u.user_pk = oa.user_pk left join thrdexams.status s on s.status_id = oas.status_id) as main_table WHERE (?1 is null or main_table.status = ?1) and (?2 is null or main_table.subject = ?2) and (?3 is null or main_table.examName = ?3) and (?4 is null or main_table.examDate = ?4) and (?5 is null or main_table.examBatch = ?5) and (?6 is null or main_table.level = ?6) and (?7 is null or main_table.userId = ?7) and (?8 is null or main_table.objquesId = ?8) and (?9 is null or main_table.statusCode = ?9)	" , nativeQuery = true)
	@Query(value = "SELECT main_table.objquesId,main_table.questionsId,main_table.qbId,main_table.clientId,main_table.examName, main_table.examDate,main_table.examBatch, main_table.questionsDescription, main_table.qstImage, main_table.status,main_table.objectionAllocationPk,main_table.subjectId, main_table.levelId,main_table.smeId, main_table.userId, main_table.name, main_table.statusId, main_table.statusCode,main_table.subject,main_table.level,main_table.summaryId,main_table.langId,main_table.langName, main_table.qst_pid FROM (SELECT  CAST(inner_table.objquesId AS TEXT) as objquesId, inner_table.questionsId, inner_table.qbId, inner_table.clientId, inner_table.examName, inner_table.examDate, inner_table.examBatch, inner_table.langId, inner_table.langName, inner_table.questionsDescription, inner_table.qstImage, case when oa.objalloc_pk IS NOT NULL then oa.objalloc_pk else 0 end objectionAllocationPk, oas.subject_id as subjectId, oas.level_id as levelId, u.user_pk as smeId, u.user_id as userId, u.firstname || ' ' || u.lastname as name, oa.action, oa.status_id as statusId, sts.code as statusCode, rm.name as subject, l.lvl_code as level, case when s.code IS NOT NULL then s.code else 'YET_TO_ALLOCATE' end status, oas.id as summaryId, inner_table.qst_pid FROM  ( SELECT o.objques_pk as objquesId, o.qst_pk as questionsId, o.qst_qb_id as qbId, o.qtp_clnt_id as clientId, TRIM(o.qst_mdm_name) as examName, to_char(o.qbm_date, 'DD-MM-YYYY') as examDate, o.qbm_batch as examBatch, tlm.tlm_lang_name as langName,tlm.tlm_lang_id as langId, convert_from(kbne.qst_body, 'UTF8') as questionsDescription, knms.qbi_image as qstImage, o.qst_pid FROM thrdexams.objques o inner join thrdexams.tbl_module_lang_map tmlm2 on tmlm2.tmlm_module_id = o.par_mdm_id inner join thrdexams.tbl_lang_mstr tlm on tlm.tlm_lang_id = tmlm2.tmlm_lang_id inner join thrdexams.kub6nk_b6xch_m6pp1n9 knbxmpn on knbxmpn.qbm_module_id = tmlm2.tmlm_module_lang_id and knbxmpn.qbm_date = o.qbm_date and knbxmpn.qbm_batch = o.qbm_batch inner join thrdexams.kusxn_b6nk_ed kbne on kbne.qst_qb_id = knbxmpn.qbm_qb_id and o.qtp_clnt_id = kbne.qst_clnt_id left join thrdexams.kub6nk_1m693s knms on knms.qbi_qb_id = kbne.qst_qb_id and knms.qbi_filename = kbne.qst_img_path) as inner_table left join thrdexams.obj_alloc_summary oas on oas.objques_pk = inner_table.objquesId and (?10 is null or oas.currrent = ?10) left join thrdexams.obj_alloc oa on oa.summary_id = oas.id left join thrdexams.status sts on sts.status_id = oa.status_id left join thrdexams.ref_master rm on rm.id = oas.subject_id left join thrdexams.levels l on l.lvl_id = oas.level_id left join thrdexams.users u on u.user_pk = oa.user_pk left join thrdexams.status s on s.status_id = oas.status_id ) as main_table WHERE (?1 is null or main_table.status = ?1) and (?2 is null or main_table.subject = ?2) and (?3 is null or main_table.examName = ?3) and (?4 is null or main_table.examDate = ?4) and (?5 is null or main_table.examBatch = ?5) and (?6 is null or main_table.level = ?6) and (?7 is null or main_table.userId = ?7) and (?8 is null or main_table.objquesId = ?8) and (?9 is null or main_table.statusCode = ?9) and NOT (status IN ('APPROVED', 'REJECTED') AND statuscode = 'ALLOCATED')  ORDER BY main_table.objquesId,main_table.langId " , nativeQuery = true)
	List<GetAllocationDetailsDTO> getAllocationDetails(String status, String subject, String examName,String examDate, String examBatch, String level, String userId, String objQuestion, String smeStatus, String currStatus);

	void deleteBySummaryIdIn(List<Integer> allocSmryPkList);
	
	List<ObjectedQuestionsAllocationModel> findAllBysummaryId(Integer summaryId);
	
	void deleteByobjectionAllocationPkIn(List<Long> objectionAllocationPk);
	
//	List<ObjectedQuestionsAllocationModel> findAllByObjectionAllocationPk(List<Long> allocPK);
	
	@Query("SELECT o FROM ObjectedQuestionsAllocationModel o WHERE o.objectionAllocationPk IN :Ids")
    List<ObjectedQuestionsAllocationModel> findAllByIds(@Param("Ids") List<Long> Ids);
	
	ObjectedQuestionsAllocationModel findAllByObjectionAllocationPk(Long allocPK);
	
	List<ObjectedQuestionsAllocationModel> findAllBysummaryIdAndObjectionAllocationPk(Integer summaryId, Long allocPK);
	
	@Query(value = "SELECT o.qtp_clnt_id as clientId, tlm.tlm_lang_name as langName, tlm.tlm_lang_id as langId, convert_from(kbne.qst_body, 'UTF8') as questionsDescription, knms.qbi_image as qstImage FROM thrdexams.objques o inner join thrdexams.tbl_module_lang_map tmlm2 on tmlm2.tmlm_module_id = o.par_mdm_id inner join thrdexams.tbl_lang_mstr tlm on tlm.tlm_lang_id = tmlm2.tmlm_lang_id inner join thrdexams.kub6nk_b6xch_m6pp1n9 knbxmpn on knbxmpn.qbm_module_id = tmlm2.tmlm_module_lang_id and knbxmpn.qbm_date = o.qbm_date and knbxmpn.qbm_batch = o.qbm_batch inner join thrdexams.kusxn_b6nk_ed kbne on kbne.qst_qb_id = knbxmpn.qbm_qb_id and o.qst_pid = kbne.qst_clnt_id left join thrdexams.kub6nk_1m693s knms on knms.qbi_qb_id = kbne.qst_qb_id and knms.qbi_filename = kbne.qst_img_path where o.qst_pk =?1 and o.qst_qb_id =?2 " , nativeQuery = true)
	List<GetAllocationDetailsDTO> getParentQuestionDetails(Integer qstPK, Integer qbId);

}
